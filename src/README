erez.levanon




=============================
=      File description     =
=============================
README 			this file
QUESTIONS 		answers to multiple selection questions

main 									- package
    -   exceptions
            method_exceptions
                MethodException
                    IllegalArgumentNameException
                    IllegalArgumentTypeException
                    IllegalArgumentValueException
                    IllegalMethodNameException
                    NonExistingMethodException
                    WrongArgumentNumberException
            parser_exceptions
                IllegalLineException
                ReturnStatementInGlobalScopeException
                UnbalancedScopeException
                UnexpectedExpressionAfterReturnException
            scope_exceptions
                ScopeException
                    NonexistingVariableException
            variable_exceptions
        Sjavac
		



=============================
=          Design           =
=============================
same as the one shown in class.

=============================
=  Implementation details   =
=============================


=============================
=    Answers to questions   =
=============================
1. in the design segment

2. Exception hirarchy (extends relationships) 

java.utils.Exception
	FilterException
		IllegalArgFilterException
		UnexistingFilterException
		WrongNumberOfArgumentsException
	OrderException
		UnexistingOrderException
		WrongNumberOfArgsOrder
	ParserExcetpion
	
filter and order exceptions are type1 errors, parser exception is type2 error.
i did so to allow modularity and different dealing with different kinds of exceptions for
future changes to the program (so you could differ the treatment of order and filter exception e.g)

3. 	i used an ArrayList and the Collections.sort(Collection c, Comparator<T>) for simplicity.
	because we only need to sort the files once after filtered. the arraylist allows adding of
	neede files and the sort will sort it with O(nlogn). after sorting, printing will be linear.

.
		
